# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/CMSgov/hospital-price-transparency/refs/heads/master/documentation/JSON/schemas/V2.2.1_Hospital_price_transparency_schema.json
#   timestamp: 2025-10-31T23:07:23+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Annotated, List, Literal, Optional, Union

from pydantic import BaseModel, Field, RootModel


class Type(Enum):
    CPT = 'CPT'
    HCPCS = 'HCPCS'
    ICD = 'ICD'
    DRG = 'DRG'
    MS_DRG = 'MS-DRG'
    R_DRG = 'R-DRG'
    S_DRG = 'S-DRG'
    APS_DRG = 'APS-DRG'
    AP_DRG = 'AP-DRG'
    APR_DRG = 'APR-DRG'
    TRIS_DRG = 'TRIS-DRG'
    APC = 'APC'
    NDC = 'NDC'
    HIPPS = 'HIPPS'
    LOCAL = 'LOCAL'
    EAPG = 'EAPG'
    CDT = 'CDT'
    RC = 'RC'
    CDM = 'CDM'


class CodeInformation(BaseModel):
    code: Annotated[str, Field(min_length=1)]
    type: Type


class Affirmation(BaseModel):
    affirmation: Literal[
        'To the best of its knowledge and belief, the hospital has included all applicable standard charge information in accordance with the requirements of 45 CFR 180.50, and the information encoded is true, accurate, and complete as of the date indicated.'
    ]
    confirm_affirmation: bool


class Type1(Enum):
    GR = 'GR'
    ML = 'ML'
    ME = 'ME'
    UN = 'UN'
    F2 = 'F2'
    GM = 'GM'
    EA = 'EA'


class DrugInformation(BaseModel):
    unit: Annotated[str, Field(min_length=1)]
    type: Type1


class State(Enum):
    AL = 'AL'
    AK = 'AK'
    AS = 'AS'
    AZ = 'AZ'
    AR = 'AR'
    CA = 'CA'
    CO = 'CO'
    CT = 'CT'
    DE = 'DE'
    DC = 'DC'
    FM = 'FM'
    FL = 'FL'
    GA = 'GA'
    GU = 'GU'
    HI = 'HI'
    ID = 'ID'
    IL = 'IL'
    IN = 'IN'
    IA = 'IA'
    KS = 'KS'
    KY = 'KY'
    LA = 'LA'
    ME = 'ME'
    MH = 'MH'
    MD = 'MD'
    MA = 'MA'
    MI = 'MI'
    MN = 'MN'
    MS = 'MS'
    MO = 'MO'
    MT = 'MT'
    NE = 'NE'
    NV = 'NV'
    NH = 'NH'
    NJ = 'NJ'
    NM = 'NM'
    NY = 'NY'
    NC = 'NC'
    ND = 'ND'
    MP = 'MP'
    OH = 'OH'
    OK = 'OK'
    OR = 'OR'
    PW = 'PW'
    PA = 'PA'
    PR = 'PR'
    RI = 'RI'
    SC = 'SC'
    SD = 'SD'
    TN = 'TN'
    TX = 'TX'
    UT = 'UT'
    VT = 'VT'
    VI = 'VI'
    VA = 'VA'
    WA = 'WA'
    WV = 'WV'
    WI = 'WI'
    WY = 'WY'


class LicenseInformation(BaseModel):
    license_number: Annotated[Optional[str], Field(min_length=1)] = None
    state: State


class Setting(Enum):
    inpatient = 'inpatient'
    outpatient = 'outpatient'
    both = 'both'


class ModifierPayerInformation(BaseModel):
    payer_name: Annotated[str, Field(min_length=1)]
    plan_name: Annotated[str, Field(min_length=1)]
    description: Annotated[str, Field(min_length=1)]


class Methodology(Enum):
    case_rate = 'case rate'
    fee_schedule = 'fee schedule'
    percent_of_total_billed_charges = 'percent of total billed charges'
    per_diem = 'per diem'
    other = 'other'


class PayersInformation(BaseModel):
    payer_name: Annotated[str, Field(min_length=1)]
    plan_name: Annotated[str, Field(min_length=1)]
    additional_payer_notes: Optional[str] = None
    standard_charge_dollar: Annotated[Optional[float], Field(gt=0.0)] = None
    standard_charge_algorithm: Optional[str] = None
    standard_charge_percentage: Annotated[Optional[float], Field(gt=0.0)] = None
    estimated_amount: Annotated[Optional[float], Field(gt=0.0)] = None
    methodology: Methodology


class StandardCharges1(BaseModel):
    minimum: Annotated[Optional[float], Field(gt=0.0)] = None
    maximum: Annotated[Optional[float], Field(gt=0.0)] = None
    gross_charge: Annotated[float, Field(gt=0.0)]
    discounted_cash: Annotated[Optional[float], Field(gt=0.0)] = None
    setting: Setting
    payers_information: Annotated[
        Optional[List[PayersInformation]], Field(min_length=1)
    ] = None
    additional_generic_notes: Optional[str] = None


class StandardCharges2(BaseModel):
    minimum: Annotated[Optional[float], Field(gt=0.0)] = None
    maximum: Annotated[Optional[float], Field(gt=0.0)] = None
    gross_charge: Annotated[Optional[float], Field(gt=0.0)] = None
    discounted_cash: Annotated[float, Field(gt=0.0)]
    setting: Setting
    payers_information: Annotated[
        Optional[List[PayersInformation]], Field(min_length=1)
    ] = None
    additional_generic_notes: Optional[str] = None


class StandardCharges3(BaseModel):
    minimum: Annotated[Optional[float], Field(gt=0.0)] = None
    maximum: Annotated[Optional[float], Field(gt=0.0)] = None
    gross_charge: Annotated[Optional[float], Field(gt=0.0)] = None
    discounted_cash: Annotated[Optional[float], Field(gt=0.0)] = None
    setting: Setting
    payers_information: Annotated[List[PayersInformation], Field(min_length=1)]
    additional_generic_notes: Optional[str] = None


class StandardCharges(
    RootModel[Union[StandardCharges1, StandardCharges2, StandardCharges3]]
):
    root: Union[StandardCharges1, StandardCharges2, StandardCharges3]


class ModifierInformation(BaseModel):
    description: Annotated[str, Field(min_length=1)]
    code: Annotated[str, Field(min_length=1)]
    modifier_payer_information: Annotated[
        List[ModifierPayerInformation], Field(min_length=1)
    ]


class StandardChargeInformation(BaseModel):
    description: Annotated[str, Field(min_length=1)]
    drug_information: Optional[DrugInformation] = None
    code_information: Annotated[List[CodeInformation], Field(min_length=1)]
    standard_charges: Annotated[List[StandardCharges], Field(min_length=1)]


class HospitaPriceTransparency(BaseModel):
    hospital_name: Annotated[str, Field(min_length=1)]
    hospital_address: Annotated[List[str], Field(min_length=1)]
    last_updated_on: date
    affirmation: Affirmation
    license_information: LicenseInformation
    version: Annotated[str, Field(min_length=1)]
    hospital_location: Annotated[List[str], Field(min_length=1)]
    standard_charge_information: Annotated[
        List[StandardChargeInformation], Field(min_length=1)
    ]
    modifier_information: Optional[List[ModifierInformation]] = None
